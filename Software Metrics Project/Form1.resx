<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="addButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/7gAOQWRvYmUAZAAAAAAB/+EFpEV4aWYAAE1NACoAAAAIAAwBAAAD
        AAAAAQSwAAABAQADAAAAAQSwAAABAgADAAAAAwAAAJ4BBgADAAAAAQACAAABEgADAAAAAQABAAABFQAD
        AAAAAQADAAABGgAFAAAAAQAAAKQBGwAFAAAAAQAAAKwBKAADAAAAAQACAAABMQACAAAAIgAAALQBMgAC
        AAAAFAAAANaHaQAEAAAAAQAAAOoAAAEiAAgACAAIAEgAAAABAAAASAAAAAEAAEFkb2JlIFBob3Rvc2hv
        cCBDQyAyMDE0IChXaW5kb3dzKQAyMDIxOjA1OjIxIDA3OjU2OjUwAAAEkAAABwAAAAQwMjMxoAEAAwAA
        AAH//wAAoAIABAAAAAEAAAAtoAMABAAAAAEAAAAtAAAAAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAA
        AXABGwAFAAAAAQAAAXgBKAADAAAAAQACAAACAQAEAAAAAQAAAYACAgAEAAAAAQAABBwAAAAAAAAASAAA
        AAEAAABIAAAAAf/Y/+0ADEFkb2JlX0NNAAL/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsK
        CxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAO
        DhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAAR
        CAAtAC0DASIAAhEBAxEB/90ABAAD/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEB
        AQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYU
        kaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSV
        xNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIE
        QVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD
        03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJ
        JTxf+MX685f1WZiU4VDLcjLLn+pbJY1lZZvbsbt3Ps3/AL3sXR/V7q4610XD6qK/R+1Vh5rJnafovbu/
        ObuavNf8eP8AS+kf8Xd/1VS7n/F5/wCIvpX/ABJ/6t6SnokkkklP/9Do/rj/AIycH6r59fT/ALK/MyHM
        FtkODGta4kMG4tfvf7Vgf+Pjjf8AlS//ALeH/pJdx1z6ofV7r9td3VcQX3VN2MsDnMdtndsLqnM3N3H8
        5Zn/AI1v1H/8rz/29d/6VSU+V/Xz661/W27DsZiHE+yNe0hz9+7eWHs1n0di3vq5/jao6L0TE6W7pr7n
        YrNhsFoaHaudO303fvKl/jU+rPRfq/kdOZ0nH+ztyGWm0b3vktNez+dc/wDfXVfU3/F79Uup/Vjp+fm4
        Rsyb6t1r/VsbJ3OH0WWNakpp/wDj443/AJUv/wC3h/6SXQ/+Ob0X/mqfrF6VkC77McTTf65Hqel6n83s
        9L9N6n7n/Cfo0T/xrfqP/wCV5/7eu/8ASq2P+bHQf2N+wvsdf7MiPs+sTO/fvn1fV3+71d/qJKf/0fVU
        kkklPkn+PH+l9J/4u7/qql3P+Lz/AMRfSv8AiT/1b1i/40v+Z/pYP/OE5Iv3P+zfYw02bJZ6+/1oq9P6
        H/CfuLqvq5+yv2Fg/sf/AJO9Fv2aZnb/AC93+E3fzn/CJKdJJJJJT//Z/9sAQwABAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgICAgICAgICAgIDAwMDAwMDAwMD/9sAQwEBAQEB
        AQEBAQEBAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        /8IAEQgALQAtAwERAAIRAQMRAf/EABgAAAMBAQAAAAAAAAAAAAAAAAAJCggL/8QAJxAAAQIFAwIHAAAA
        AAAAAAAACQgKEAECBgcAIBhQGhIEBRc3GTn/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/8QAOhEAAAYBAgME
        BQkJAAAAAAAAAQIDBAUGBxEIFBUWABATCSESIhcYIDFRYYEld9c4IyR2tieXmBk5/8QAFBIBAAAAAAAA
        AAAAAAAAAAAAUP/aAAwDAQACEAMQAAAAv4AmSHTmxgADnfFVI5gCbAUQTiDZzaY4kYwYaI1x/Qy0Y8bu
        A53xVQOZAAJLh/ptQD//2gAIAQIAAQUA6J//2gAIAQMAAQUA6J//2gAIAQEAAQUAg4rOVlcRfpY+1aeU
        XYi7Y+J+Wm9X4vwMQ5HwiJrPPfEY40dw01umRu4cztOxUKIjqfEY68NLmRGFYs1viKHqRi6O1uCDp1GM
        5Fo3chBzb5CZVYMmbW0IU9fWShDhrB8TOXu23pnKYX9jpGgQFdsjl4tcFof/2gAIAQICBj8AE//aAAgB
        AwIGPwAT/9oACAEBAQY/AO7brSMDYsqN0yjnlzZrOtbMirP3VPq9JxvM1JCehEK7EOY2RlbDcOowbpuj
        PEEYxFM6nhuFDkBLbnu5aU9egDnPHMdbn9LcSPNwrU2R29hrDEs5fhGBpeLazsU5Bm6O3bqOWnhqHSSM
        YSF+R5eP4dbiP5lxP28v38GXnzfx7cg76ptsUwFd9wGUpSjReRbcSKtsZj6sU2v2J7KMq2xCYkYGyO5+
        wyQQ6zhVFFqm2bNjpCK51FDpJf8APO7f5CwX5V9tt1ogNv0xgcMD1rJMC8Ql7+zvilmUvsrUpBBVBRnW
        KynGpRKdXEBAxVTLGcD6SgQNdu20eT2T2zIj/BlIXqLu7R+a4ivM7EopYZubK/bwrnHksvHFFOVAhkzO
        FdDEEQHQQDsb1fLyuom09kDbhoIA1+sQxSI6fZ2W8zYtEyWLdvl9rtxW2+eoy61JuDeRDu1tqL1iKHSQ
        wCuP2Ctj52AimEUTwxbhJCEeNRvO73btDZOvFGg1KvXboztN6oloRq5nzuUTrUjM0Cz1l3OwbOTkHDlq
        3fC4IzXcrnQBMXC3ifo+e/353Dfml22ZwWzjEa+KI7KtKzLKX1BW93+7lnX1TnqA2r7gBvlksi8aqxb2
        B2Q3DHSIsU5fXKJiAYdn24TOe2N3cctZSxk6sN5tJcx5rggmpctws0aDrlFcyBEQceUrNgkQqbZskQCk
        DUBNqY36P3wfOGoZ63C6h9Yf1RH0h2/1+/DbQ/hG4HhfdF99cLxvN+oOp+qea9bdc8+/fee8y5vxPt8T
        r3+XiGoahjncOIhr6dBsuJ9B+3Tt5fuggIe5p6GoCAhqF+uYCGoagAlENB+gfR8namXzK3G55tkjnV3H
        Ca20lpU32RgpRXlMNlFO0N8ivY+gjS1lgiyFOqqEsk7MB2JVCFdpm2sfBR4nwse52q+5fi+O5x0rwxvF
        6m5n949Zc54rnfj/ALbm3Eev7Wvf/9k=
</value>
  </data>
</root>